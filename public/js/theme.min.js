(()=>{var Q=(e,o)=>()=>(o||e((o={exports:{}}).exports,o),o.exports);var W=Q((be,U)=>{U.exports=window.Tablesort});var ee=W();function X(){return document.documentElement&&document.documentElement.scrollTop||document.body.scrollTop}function te(){let e=document.getElementById("menu-toggle-mobile"),o=document.getElementById("menu-mobile");window.menuToggleMobileEventListener||(e.addEventListener("click",()=>{document.body.classList.toggle("blur"),e.classList.toggle("active"),o.classList.toggle("active")}),window.menuToggleMobileEventListener=!0),window._menuMobileOnClickMask=()=>{e.classList.remove("active"),o.classList.remove("active")},window.clickMaskEventSet.add(window._menuMobileOnClickMask)}function D(e){window.setTheme(e),window.saveTheme(e)}function oe(){Array.from(document.getElementsByClassName("theme-switch")).forEach(e=>{e.addEventListener("click",()=>{let o=document.body.getAttribute("theme");D(o==="dark"?"light":"dark");for(let t of window.switchThemeEventSet)t()})})}function ne(){Array.from(document.getElementsByClassName("color-theme-select")).forEach(e=>{let o=document.body.getAttribute("theme");for(let t=0;t<e.options.length;t++)if(e.options[t].value===o){e.selectedIndex=t;break}e.addEventListener("change",()=>{let t=e.value;window.localStorage&&localStorage.setItem("theme",t),t!=="auto"?D(t):window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches?D("dark"):D("light");for(let i of window.switchThemeEventSet)i()})})}function Y(){let e=window.config.search,o=window.matchMedia&&window.matchMedia("only screen and (max-width: 680px)").matches;if(!e||o&&window._searchMobileOnce||!o&&window._searchDesktopOnce)return;let t=e.maxResultLength?e.maxResultLength:10,i=e.snippetLength?e.snippetLength:50,n=e.highlightTag?e.highlightTag:"em",s=e.isCaseSensitive?e.isCaseSensitive:!1,u=e.minMatchCharLength?e.minMatchCharLength:1,w=e.findAllMatches?e.findAllMatches:!1,g=e.location?e.location:0,M=e.threshold?e.threshold:.3,A=e.distance?e.distance:100,v=e.ignoreLocation?e.ignoreLocation:!1,H=e.useExtendedSearch?e.useExtendedSearch:!1,q=e.ignoreFieldNorm?e.ignoreFieldNorm:!1,T=e.termFrequency?e.termFrequency:1,O=e.pageLength?e.pageLength:.75,r=e.termSimilarity?e.termSimilarity:1,F=e.termSaturation?e.termSaturation:1.4,L=o?"mobile":"desktop",$=document.getElementById(`header-${L}`),_=document.getElementById(`search-input-${L}`),N=document.getElementById(`search-toggle-${L}`),B=document.getElementById(`search-loading-${L}`),f=document.getElementById(`search-clear-${L}`),V=window.config["autocomplete.min.js"],P=window.config["algoliasearch.min.js"],Z=window.config["pagefind.js"],G=window.config["fuse.min.js"];if(o)window._searchMobileOnce=!0,_.addEventListener("focus",()=>{C("autocomplete-script",V,()=>{J(),_.focus()}),window.config?.search?.type==="algolia"?C("algolia-script",P,null):window.config?.search?.type==="fuse"?C("fuse-script",G,null):z(),document.body.classList.add("blur"),$.classList.add("open"),_.focus()}),document.getElementById("search-cancel-mobile").addEventListener("click",()=>{$.classList.remove("open"),document.body.classList.remove("blur"),document.getElementById("menu-toggle-mobile").classList.remove("active"),document.getElementById("menu-mobile").classList.remove("active"),B.style.display="none",f.style.display="none",window._searchMobile&&window._searchMobile.autocomplete.setVal("")}),f.addEventListener("click",()=>{f.style.display="none",window._searchMobile&&window._searchMobile.autocomplete.setVal("")},!1),window._searchMobileOnClickMask=()=>{$.classList.remove("open"),B.style.display="none",f.style.display="none",window._searchMobile&&window._searchMobile.autocomplete.setVal("")},window.clickMaskEventSet.add(window._searchMobileOnClickMask);else{let p=function(){C("autocomplete-script",V,()=>{J()}),window.config?.search?.type==="algolia"?C("algolia-script",P,null):window.config?.search?.type==="fuse"?C("fuse-script",G,null):z()};window._searchDesktopOnce=!0,N.addEventListener("mouseover",p,{once:!0}),N.addEventListener("click",()=>{p(),document.body.classList.add("blur"),$.classList.add("open"),_.focus()}),f.addEventListener("click",()=>{f.style.display="none",window._searchDesktop&&window._searchDesktop.autocomplete.setVal("")}),document.addEventListener("keydown",a=>{a.ctrlKey&&a.code==="KeyK"&&(a.preventDefault(),N.click())}),window._searchDesktopOnClickMask=()=>{$.classList.remove("open"),B.style.display="none",f.style.display="none",window._searchDesktop&&window._searchDesktop.autocomplete.setVal("")},window.clickMaskEventSet.add(window._searchDesktopOnClickMask)}_.addEventListener("input",()=>{_.value===""?f.style.display="none":f.style.display="inline"});let J=()=>{let p=autocomplete(`#search-input-${L}`,{hint:!1,autoselect:!0,dropdownMenuContainer:`#search-dropdown-${L}`,clearOnSelected:!1,cssClasses:{noPrefix:!0},debug:!0},{name:"search",source:(a,S)=>{B.style.display="inline",f.style.display="none";let m=c=>{B.style.display="none",f.style.display="inline",S(c)};if(e.type==="algolia")window._algoliaIndex=window._algoliaIndex||algoliasearch(e.algoliaAppID,e.algoliaSearchKey).initIndex(e.algoliaIndex),window._algoliaIndex.search(a,{offset:0,length:t*8,attributesToHighlight:["title"],attributesToRetrieve:["*"],attributesToSnippet:[`content:${i}`],highlightPreTag:`<${n}>`,highlightPostTag:`</${n}>`}).then(({hits:c})=>{let l={};c.forEach(({uri:d,date:I,_highlightResult:{title:y},_snippetResult:{content:k}})=>{l[d]&&l[d].context.length>k.value||(l[d]={uri:d,title:y.value,date:I,context:k.value})}),m(Object.values(l).slice(0,t))}).catch(c=>{console.error(c),m([])});else if(e.type==="fuse"){let c=()=>{let l={};return window._fuseIndex.search(a).forEach(({item:d,refIndex:I,matches:y})=>{let k=d.title,x=d.content;y.forEach(({indices:E,value:pe,key:K})=>{if(K==="content"){let b=0;for(let h=0;h<E.length;h++){let j=x.substring(E[h][0]+b,E[h][1]+1+b),R=`<${n}>`+j+`</${n}>`;x=x.substring(0,E[h][0]+b)+R+x.substring(E[h][1]+1+b,x.length),b+=n.length*2+5}}else if(K==="title"){let b=0;for(let h=0;h<E.length;h++){let j=k.substring(E[h][0]+b,E[h][1]+1+b),R=`<${n}>`+j+`</${n}>`;k=k.substring(0,E[h][0]+b)+R+k.substring(E[h][1]+1+b,x.length),b+=n.length*2+5}}}),l[d.uri]={uri:d.uri,title:k,date:d.date,context:x}}),console.log(l),Object.values(l).slice(0,t)};window._fuseIndex?m(c()):fetch(e.fuseIndexURL).then(l=>l.json()).then(l=>{let d={isCaseSensitive:s,findAllMatches:w,minMatchCharLength:u,location:g,threshold:M,distance:A,ignoreLocation:v,useExtendedSearch:H,ignoreFieldNorm:q,includeScore:!1,shouldSort:!0,includeMatches:!0,keys:["content","title"]};window._fuseIndex=new Fuse(l,d),m(c())}).catch(l=>{console.error(l),m([])})}else window._pgfIndex===void 0&&z(),window._pgfIndex.debouncedSearch(a,300).then(c=>{if(c===null||!("results"in c)){m([]);return}Promise.all(c.results.slice(0,t).map(l=>l.data())).then(l=>{let d={};for(let I of l)for(let y of I.sub_results)y.url===void 0||!("anchor"in y)||y.anchor.element!="h2"||(d[y.url]={uri:y.url,title:I.meta.title,date:I.meta.date,context:n==="mark"?y.excerpt:y.excerpt.replace(/<mark>(.*?)<\/mark>/gi,`<${n}>$1</${n}>`)});m(Object.values(d))})})},templates:{suggestion:({title:a,uri:S,date:m,context:c})=>`<div><a href=${S}><span class="suggestion-title">${a}</span></a><span class="suggestion-date">${m}</span></div><div class="suggestion-context">${c}</div>`,empty:({query:a})=>`<div class="search-empty">${e.noResultsFound}: <span class="search-query">"${a}"</span></div>`,footer:()=>{let{searchType:a,icon:S,href:m}=e.type==="algolia"?{searchType:"algolia",icon:'<svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M229.3 182.6c-49.3 0-89.2 39.9-89.2 89.2 0 49.3 39.9 89.2 89.2 89.2s89.2-39.9 89.2-89.2c0-49.3-40-89.2-89.2-89.2zm62.7 56.6l-58.9 30.6c-1.8.9-3.8-.4-3.8-2.3V201c0-1.5 1.3-2.7 2.7-2.6 26.2 1 48.9 15.7 61.1 37.1.7 1.3.2 3-1.1 3.7zM389.1 32H58.9C26.4 32 0 58.4 0 90.9V421c0 32.6 26.4 59 58.9 59H389c32.6 0 58.9-26.4 58.9-58.9V90.9C448 58.4 421.6 32 389.1 32zm-202.6 84.7c0-10.8 8.7-19.5 19.5-19.5h45.3c10.8 0 19.5 8.7 19.5 19.5v15.4c0 1.8-1.7 3-3.3 2.5-12.3-3.4-25.1-5.1-38.1-5.1-13.5 0-26.7 1.8-39.4 5.5-1.7.5-3.4-.8-3.4-2.5v-15.8zm-84.4 37l9.2-9.2c7.6-7.6 19.9-7.6 27.5 0l7.7 7.7c1.1 1.1 1 3-.3 4-6.2 4.5-12.1 9.4-17.6 14.9-5.4 5.4-10.4 11.3-14.8 17.4-1 1.3-2.9 1.5-4 .3l-7.7-7.7c-7.6-7.5-7.6-19.8 0-27.4zm127.2 244.8c-70 0-126.6-56.7-126.6-126.6s56.7-126.6 126.6-126.6c70 0 126.6 56.6 126.6 126.6 0 69.8-56.7 126.6-126.6 126.6z"/></svg>',href:"https://www.algolia.com/"}:e.type==="fuse"?{searchType:"Fuse.js",icon:"",href:"https://fusejs.io/"}:{searchType:"pagefind",icon:"",href:"https://pagefind.app"};return`<div class="search-footer">Search by <a href="${m}" rel="noopener noreferrer" target="_blank">${S} ${a}</a></div>`}}});p.on("autocomplete:selected",(a,S,m,c)=>{a.preventDefault()}),o?window._searchMobile=p:window._searchDesktop=p};function C(p,a,S){if(document.querySelector(`#${p}`)===null){let m=document.querySelector("head"),c=document.createElement("script");c.setAttribute("src",a),c.setAttribute("id",p),c.onload=S,m.appendChild(c)}}function z(){import(Z).then(p=>{window._pgfIndex=p,window._pgfIndex.options({excerptLength:i,termFrequency:T,pageLength:O,termSimilarity:r,termSaturation:F}).then(()=>{window._pgfIndex.init()})})}}function ie(){document.querySelectorAll(".details").forEach(e=>{let o=e.getElementsByClassName("details-summary")[0],t=o.nextElementSibling;e.classList.contains("open")&&(t.style.maxHeight="fit-content"),o.addEventListener("click",()=>{e.classList.contains("open")?t.style.maxHeight="0px":t.style.maxHeight="fit-content",e.classList.toggle("open")},!1),addEventListener("beforeprint",()=>{e.classList.contains("open")||o.click()})})}function se(){window.config.lightGallery&&lightGallery(document.getElementById("content"),window.config.lightGallery)}function ce(){window.config?.table?.sort&&document.querySelectorAll(".content table").forEach(e=>new ee(e))}function le(){let e=document.getElementById("TableOfContents");if(e===null)return;let o=window.matchMedia&&window.matchMedia("only screen and (max-width: 1000px)").matches;if(document.getElementById("toc-static").getAttribute("kept")||o)window._tocOnScroll&&window.scrollEventSet.delete(window._tocOnScroll);else{let t=document.getElementById("toc-auto"),i=e.querySelectorAll("a:first-child"),n=e.getElementsByTagName("li"),s=document.getElementsByClassName("headerLink"),u=document.body.getAttribute("header-desktop")!=="normal",w=document.getElementById("header-desktop").offsetHeight,g=20+(u?w:0),M=t.offsetTop,A=M-g+(u?0:w);window._tocOnScroll=window._tocOnScroll||(()=>{let H=document.getElementById("post-footer").offsetTop-t.getBoundingClientRect().height,q=H-g+(u?0:w);if(window.newScrollTop<A?(t.style.position="absolute",t.style.top=`${M}px`):window.newScrollTop>q?(t.style.position="absolute",t.style.top=`${H}px`):(t.style.position="fixed",t.style.top=`${g}px`),i.length===0)return;let T=-1,O=g+window.newScrollTop;if(s.length>0)if(s[s.length-1].offsetTop<O)T=s.length-1;else for(let r=0;r<s.length-1;r++){let F=s[r].offsetTop,L=s[r+1].offsetTop;if(F<=O&&L>O){T=r;break}}if(Array.from(i).forEach(r=>r.classList.remove("active")),Array.from(n).forEach(r=>r.classList.remove("has-active")),T>=0&&T<i.length){i[T].classList.add("active");let r=i[T].parentElement;for(;r!==e;)r.classList.add("has-active"),r=r.parentElement.parentElement}}),window._tocOnScroll(),window.scrollEventSet.add(window._tocOnScroll)}}function ae(){let e=document.querySelector("#toc-dialog"),o=document.querySelector("#toc-drawer-button");!e||!o||(o.addEventListener("click",()=>{e.showModal(),document.activeElement?.blur()}),e.addEventListener("click",t=>{e.close()}))}function re(){window.config.mapbox&&(mapboxgl.accessToken=window.config.mapbox.accessToken,mapboxgl.setRTLTextPlugin(window.config.mapbox.RTLTextPlugin),window._mapboxArr=window._mapboxArr||[],Array.from(document.getElementsByClassName("mapbox")).forEach(e=>{let{lng:o,lat:t,zoom:i,lightStyle:n,darkStyle:s,marked:u,navigation:w,geolocate:g,scale:M,fullscreen:A}=window.config.data[e.id],v=new mapboxgl.Map({container:e,center:[o,t],zoom:i,minZoom:.2,style:window.isDark?s:n,attributionControl:!1});u&&new mapboxgl.Marker().setLngLat([o,t]).addTo(v),w&&v.addControl(new mapboxgl.NavigationControl,"bottom-right"),g&&v.addControl(new mapboxgl.GeolocateControl({positionOptions:{enableHighAccuracy:!0},showUserLocation:!0,trackUserLocation:!0}),"bottom-right"),M&&v.addControl(new mapboxgl.ScaleControl),A&&v.addControl(new mapboxgl.FullscreenControl),v.addControl(new MapboxLanguage),window._mapboxArr.push(v)}),window._mapboxOnSwitchTheme=()=>{window._mapboxArr.forEach(e=>{let o=e.getContainer(),{lightStyle:t,darkStyle:i}=window.config.data[o.id];e.setStyle(window.isDark?i:t),e.addControl(new MapboxLanguage)})},window.switchThemeEventSet.add(window._mapboxOnSwitchTheme))}function de(){if(window.config.typeit){let e=window.config.typeit,o=e.speed?e.speed:100,t=e.cursorSpeed?e.cursorSpeed:1e3,i=e.cursorChar?e.cursorChar:"|";Object.values(e.data).forEach(n=>{let s=u=>{let w=n[u];if(!document.getElementById(w).hasAttribute("data-typeit-id")){let g=new TypeIt(`#${w}`,{strings:window.config.data[w],speed:o,lifeLike:!0,cursorSpeed:t,cursorChar:i,waitUntilVisible:!0,afterComplete:()=>{if(u===n.length-1){e.duration>=0&&window.setTimeout(()=>{g.destroy()},e.duration);return}g.destroy(),s(u+1)}}).go()}};s(0)})}}function ue(){function e(i){let n=document.getElementsByTagName("meta");for(let s=0;s<n.length;s++)if(n[s].getAttribute("name")===i)return n[s]}let o=e("theme-color"),t={light:"#f8f8f8",dark:"#161b22"};window._metaThemeColorOnSwitchTheme=()=>{o.content=t[document.body.getAttribute("theme")]},window.switchThemeEventSet.add(window._metaThemeColorOnSwitchTheme),window._metaThemeColorOnSwitchTheme()}function me(){let e=document.getElementById("back-to-top-button");function o(){window.newScrollTop=X(),window.newScrollTop>20?e.style.opacity="1":e.style.opacity="0";for(let t of window.scrollEventSet)t();window.oldScrollTop=window.newScrollTop}window.addEventListener("scroll",o,!1)}function we(){window.addEventListener("resize",()=>{window._resizeTimeout||(window._resizeTimeout=window.setTimeout(()=>{window._resizeTimeout=null;for(let e of window.resizeEventSet)e();Y()},100))},!1)}function he(){document.getElementById("mask").addEventListener("click",()=>{for(let e of window.clickMaskEventSet)e();document.body.classList.remove("blur")},!1)}function ge(){document.querySelectorAll(".code-block").forEach(e=>{let o=e.querySelector("button.code-block-button"),t=e.querySelector("code.chroma"),i=e.querySelector("button.copy-code-button"),n=i.querySelector("span.copy-icon"),s=i.querySelector("span.check-icon"),u=e.querySelector("button.wrap-code-button"),w=e.querySelector("button.line-number-button");t.style.maxHeight="fit-content",o.addEventListener("click",()=>{e.classList.toggle("is-open"),e.classList.toggle("is-closed")}),i?.addEventListener("click",()=>{navigator.clipboard.writeText(t.textContent),n.style.display="none",s.style.display="block",setTimeout(()=>{n.style.display="block",s.style.display="none"},3e3)}),u?.addEventListener("click",()=>{t.style.maxHeight="fit-content",e.classList.toggle("is-wrap")}),w.addEventListener("click",()=>{e.classList.toggle("show-line-numbers")}),addEventListener("beforeprint",g=>{e.classList.contains("is-closed")&&o.click(),e.classList.contains("is-wrap")||u.click()})})}function fe(){window.isDark=document.body.getAttribute("theme")!=="light",window.newScrollTop=X(),window.oldScrollTop=window.newScrollTop,window.scrollEventSet=new Set,window.resizeEventSet=new Set,window.clickMaskEventSet=new Set,te(),oe(),ne(),ue(),Y(),ge(),ie(),se(),ce(),de(),re(),le(),ae(),me(),we(),he()}fe();})();
//# sourceMappingURL=data:application/json;base64,
